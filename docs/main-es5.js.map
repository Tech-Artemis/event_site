{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/admin-guard.service.ts","webpack:///src/app/auth/auth-guard.service.ts","webpack:///src/app/auth/auth.interceptor.ts","webpack:///src/app/auth/authentication.service.ts","webpack:///src/app/auth/token-storage.service.ts","webpack:///src/app/components/calendar/calendar.component.ts","webpack:///src/app/components/calendar/calendar.component.html","webpack:///src/app/components/events-list/events-list.component.ts","webpack:///src/app/components/events-list/events-list.component.html","webpack:///src/app/components/events/create-event/create-event.component.ts","webpack:///src/app/components/events/create-event/create-event.component.html","webpack:///src/app/components/events/edit-event/edit-event.component.ts","webpack:///src/app/components/events/edit-event/edit-event.component.html","webpack:///src/app/components/events/event-card/event-card.component.ts","webpack:///src/app/components/events/event-card/event-card.component.html","webpack:///src/app/components/events/event-details/event-details.component.ts","webpack:///src/app/components/events/event-details/event-details.component.html","webpack:///src/app/components/lateral-navbar/lateral-navbar.component.ts","webpack:///src/app/components/lateral-navbar/lateral-navbar.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/components/payment-modal/payment-modal.component.ts","webpack:///src/app/components/payment-modal/payment-modal.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/components/tickets-list/tickets-list.component.ts","webpack:///src/app/components/tickets-list/tickets-list.component.html","webpack:///src/app/helpers/date.ts","webpack:///src/app/helpers/must-match.validator.ts","webpack:///src/app/models/event.model.ts","webpack:///src/app/models/fee.model.ts","webpack:///src/app/pages/about/about.component.ts","webpack:///src/app/pages/about/about.component.html","webpack:///src/app/pages/profile/profile.component.ts","webpack:///src/app/pages/profile/profile.component.html","webpack:///src/app/services/events.service.ts","webpack:///src/app/services/fees.service.ts","webpack:///src/app/services/http/http.options.ts","webpack:///src/app/services/req/event.create.ts","webpack:///src/app/services/tickets.service.ts","webpack:///src/app/services/user.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","title","year","Date","getFullYear","console","log","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AdminGuardService","token","router","isAdmin","navigate","providedIn","AuthGuardService","isLogged","fire","icon","text","TOKEN_HEADER_KEY","AuthInterceptor","next","authReq","getToken","clone","headers","set","handle","httpInterceptorProviders","provide","useClass","multi","httpOptions","JwtResponse","LoginInfo","username","password","SignupInfo","name","email","role","Role","AuthenticationService","http","loginUrl","apiUrl","signupUrl","credentials","post","info","TOKEN_KEY","USERNAME_KEY","AUTHORITIES_KEY","TokenStorageService","window","sessionStorage","clear","removeItem","setItem","getItem","authorities","JSON","stringify","roles","Array","parse","forEach","authority","ADMIN","push","USER","getAuthorities","includes","CalendarComponent","eventsService","events","PAGESIZE","page","currentNumberPages","getEventsByDate","subscribe","data","content","calendars","attach","displayMode","dateFormat","startDate","endDate","weekStart","lang","isRange","calendar","on","date","element","document","querySelector","bulmaCalendar","datepicker","ls","value","split","date_init","date_end","ev","concat","length","filter","i","Direction","ROW_SIZE","EventsListComponent","route","eventsList","dropdownActive","descAscActive","sortActive","getEvents","end","ans","totalPages","range","Math","ceil","CreateEventComponent","formBuilder","error_date","createForm","fees","createCalendar","createEventForm","group","compose","required","minLength","subtitle","description","newEvent","createEvent","create","body","color","isDismissable","parent","getElementById","show","reset","error","splice","clearAsyncValidators","price","disabledDates","today","onSubmit","addFee","EditEventComponent","feeService","params","toDelete","getEvent","event","event_model","editEventForm","setValue","deleteFee","updateEvent","undefined","EventCardComponent","pastEvent","EventDetailsComponent","tokenStorageService","sub","classList","add","remove","s","openBuyTicketsModal","closeBuyTicketsModal","LateralNavbarComponent","active","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","signOut","newActive","LoginComponent","authService","tokenStorage","error_signin","isSignInEmitter","emit","loginForm","attemptAuth","saveToken","saveUsername","saveAuthorities","noAccount","NavbarComponent","is_active","isSignIn","getEventsByTitle","isSignUp","closeModalSignUp","closeModalSignIn","openModalSignUp","getUsername","collapse","isSignUpEmitter","PaymentModalComponent","ticketsService","userService","tokenService","close","fee_assistants","isDocumentationfilled","isCheckoutFilled","total_people","step_id","total","fee_tickets","fill","getUserData","points","fee","target","reduce","p","c","usernameTickets","getElementsByClassName","userIdTickets","count","iFee","blank","assistants","error_points","getTotalPrice","n","pay","buyTickets","updateCardPayment","back","RegisterComponent","form","errorMessage","isSignUpFailed","isSignedUp","registerForm","pattern","password2","checkbox","requiredTrue","validator","signupInfo","signUp","TicketsListComponent","tickets","getTickets","getTodayString","dd","String","getDate","padStart","mm","getMonth","yyyy","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","Event","userId","min","Number","MAX_SAFE_INTEGER","getCheapestPrice","getHighestPrice","max","Fee","AboutComponent","phrases","ProfileComponent","userData","status","message","EventsService","eventsUrl","url","get","pipe","_","handleError","put","operation","FeesService","feesUrl","FeeCreate","EventCreate","FeeTickets","feeId","Assistant","TicketsService","ticketsUrl","feeList","UserService","authUrl","usersUrl","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EventDetailsComponent } from './components/events/event-details/event-details.component';\nimport { EventsListComponent } from './components/events-list/events-list.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { CreateEventComponent } from './components/events/create-event/create-event.component';\nimport { EditEventComponent } from './components/events/edit-event/edit-event.component';\nimport { TicketsListComponent } from './components/tickets-list/tickets-list.component';\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { AdminGuardService } from './auth/admin-guard.service';\n\n\nconst routes: Routes = [\n  { path: '', component: EventsListComponent },\n  { path: \"about\", component: AboutComponent },\n  { path: 'calendar', component: CalendarComponent },\n\n  // AUTH\n  { path: 'events/created', component: EventsListComponent, canActivate: [AuthGuardService] },\n  { path: \"events/:id\", component: EventDetailsComponent, canActivate: [AuthGuardService] },\n  { path: \"profile\", component: ProfileComponent, canActivate: [AuthGuardService] },\n  { path: 'tickets', component: TicketsListComponent, canActivate: [AuthGuardService] },\n\n  // ADMIN\n  { path: 'event/create', component: CreateEventComponent, canActivate: [AdminGuardService] },\n  { path: 'event/edit/:id', component: EditEventComponent, canActivate: [AdminGuardService] },\n\n  // REDIRECT\n  { path: '**', redirectTo: '' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, isDevMode } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'events-website';\n\n  year = new Date().getFullYear();\n\n  ngOnInit() {\n    if (isDevMode()) {\n      console.log('👋 Development!');\n    } else {\n      console.log('💪 Production!');\n    }\n  }\n}\n","<div id=\"notification\"></div>\n<app-navbar></app-navbar>\n\n<br>\n\n<div class=\"container-fluid\" style=\"height: 100%;\">\n  <div class=\"columns\">\n    <div class=\"column container is-fluid is-one-quarter\">\n      <app-lateral-navbar></app-lateral-navbar>\n    </div>\n\n\n    <div class=\"column is-fluid margin-right\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n\n<br>\n<br>\n<br>\n\n<!-- footer -->\n<footer class=\"footer\">\n  <div class=\"content has-text-centered\">\n    <p>\n      <span class=\"footer-brand\">MusicMeets</span> by <a\n        href=\"https://ospino.me/\">ospino.me</a>.\n      <br>\n      © {{ year }} Copyright:\n    </p>\n  </div>\n</footer>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { EventsListComponent } from './components/events-list/events-list.component';\nimport { LateralNavbarComponent } from './components/lateral-navbar/lateral-navbar.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { EventCardComponent } from './components/events/event-card/event-card.component';\nimport { EventDetailsComponent } from './components/events/event-details/event-details.component';\nimport { PaymentModalComponent } from './components/payment-modal/payment-modal.component';\nimport { AboutComponent } from './pages/about/about.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { httpInterceptorProviders } from './auth/auth.interceptor';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CreateEventComponent } from './components/events/create-event/create-event.component';\nimport { EditEventComponent } from './components/events/edit-event/edit-event.component';\nimport { TicketsListComponent } from './components/tickets-list/tickets-list.component';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { CalendarComponent } from './components/calendar/calendar.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    EventsListComponent,\n    LateralNavbarComponent,\n    NavbarComponent,\n    EventCardComponent,\n    EventDetailsComponent,\n    PaymentModalComponent,\n    AboutComponent,\n    ProfileComponent,\n    RegisterComponent,\n    LoginComponent,\n    CreateEventComponent,\n    EditEventComponent,\n    TicketsListComponent,\n    CalendarComponent\n  ],\n  imports: [\n    BrowserModule,\n    // import HttpClientModule after BrowserModule.\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    InfiniteScrollModule\n  ],\n  providers: [httpInterceptorProviders],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuardService implements CanActivate {\n\n  constructor(public token: TokenStorageService, public router: Router) { }\n\n  canActivate(): boolean {\n\n    if (!this.token.isAdmin()) {\n      this.router.navigate(['']);\n      return false;\n    }\n\n    return true;\n  }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Router, CanActivate } from '@angular/router';\nimport { TokenStorageService } from './token-storage.service';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public token: TokenStorageService, public router: Router) { }\n\n\n  canActivate(): boolean {\n\n    if (!this.token.isLogged()) {\n      this.router.navigate(['']);\n\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'You need to be a user to access this',\n      });\n      return false;\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HTTP_INTERCEPTORS, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\nimport { TokenStorageService } from './token-storage.service';\n\nconst TOKEN_HEADER_KEY = 'Authorization';\n\n/**\n * Implement the http interceptor.\n * - Intercept the HttpRequest we are sending with the angular app and to something with it.\n * - In this case we will use to add the Baerer TOKEN.\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private token: TokenStorageService) { } // DI\n\n  /**\n   *\n   */\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\n    let authReq = req;\n    const token = this.token.getToken();\n    if (token != null) {\n      authReq = req.clone({ headers: req.headers.set(TOKEN_HEADER_KEY, 'Bearer ' + token) }); // Set headers\n    }\n    return next.handle(authReq);\n  }\n}\n\n\n// Export the provider\nexport const httpInterceptorProviders = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useClass: AuthInterceptor,\n    multi: true\n  }\n];\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'COntent-Type': 'application/json' })\n};\n\nexport class JwtResponse {\n  token: string;\n  type: string;\n  username: string;\n  authorities: string[];\n}\n\n\nexport class LoginInfo {\n  username: string;\n  password: string;\n\n  constructor(username: string, password: string) {\n    this.username = username;\n    this.password = password;\n  }\n}\n\nexport class SignupInfo {\n\n  username: string;\n  role: string[];\n  password: string;\n  name: string;\n  email: string;\n\n  constructor(name: string, username: string, password: string, email: string) {\n    this.name = name;\n    this.username = username;\n    this.role = ['user'];\n    this.password = password;\n    this.email = email;\n  }\n}\n\n\nexport enum Role {\n  ADMIN = \"ROLE_ADMIN\",\n  USER = \"ROLE_USER\"\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  private loginUrl = environment.apiUrl + '/auth/signin';\n  private signupUrl = environment.apiUrl + '/auth/signup';\n\n\n  constructor(private http: HttpClient) { }\n\n  attemptAuth(credentials: LoginInfo): Observable<JwtResponse> {\n    return this.http.post<JwtResponse>(this.loginUrl, credentials, httpOptions);\n  }\n\n  signUp(info: SignupInfo): Observable<string> {\n    return this.http.post<string>(this.signupUrl, info, httpOptions);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Role } from './authentication.service';\nimport { Router } from '@angular/router';\n\nconst TOKEN_KEY = 'AuthToken';\nconst USERNAME_KEY = 'AuthUsername';\nconst AUTHORITIES_KEY = 'AuthAuthorities';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  private roles: Array<Role>;\n  constructor(private router: Router) { }\n\n  signOut() {\n    window.sessionStorage.clear();\n    this.router.navigate(['']);\n  }\n\n  public saveToken(token: string) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUsername(username: string) {\n    window.sessionStorage.removeItem(USERNAME_KEY);\n    window.sessionStorage.setItem(USERNAME_KEY, username);\n  }\n\n  public getUsername(): string {\n    return sessionStorage.getItem(USERNAME_KEY);\n  }\n\n  public saveAuthorities(authorities: string[]) {\n    window.sessionStorage.removeItem(AUTHORITIES_KEY);\n    window.sessionStorage.setItem(AUTHORITIES_KEY, JSON.stringify(authorities));\n  }\n\n  public getAuthorities(): Role[] {\n    this.roles = new Array<Role>();\n\n    if (sessionStorage.getItem(TOKEN_KEY) != null) {\n      JSON.parse(sessionStorage.getItem(AUTHORITIES_KEY)).forEach(authority => {\n        if (authority.authority == Role.ADMIN) {\n          this.roles.push(Role.ADMIN);\n        } else if (authority.authority == Role.USER) {\n          this.roles.push(Role.USER);\n        }\n      });\n    }\n\n    return this.roles;\n  }\n\n  public isAdmin(): boolean {\n    return this.getAuthorities().includes(Role.ADMIN);\n  }\n\n  public isLogged(): boolean {\n    return sessionStorage.getItem(TOKEN_KEY) != null;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min.js';\nimport { EventsService } from 'src/app/services/events.service';\nimport { Event } from '../../models/event.model';\nimport { getTodayString } from 'src/app/helpers/date';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.css']\n})\nexport class CalendarComponent implements OnInit {\n\n  events: Event[] = [];\n  PAGESIZE: number = 9;\n  currentNumberPages: number;\n  page: number;\n\n  date_init: string;\n  date_end: string;\n\n  constructor(private eventsService: EventsService) {\n    this.page = 0;\n    this.currentNumberPages = 1;\n  }\n\n  ngOnInit(): void {\n    // Get the data from today.\n    this.eventsService.getEventsByDate(this.page, getTodayString(), getTodayString())\n      .subscribe(data => {\n        this.events = data.content;\n      })\n\n\n    // Initialize all input of date type.\n    const calendars = bulmaCalendar.attach('[type=\"date\"]', {\n      displayMode: 'inline',\n      dateFormat: 'YYYY-MM-DD',\n      startDate: getTodayString(),\n      endDate: getTodayString(),\n      weekStart: 1,\n      lang: \"en\",\n      isRange: true,\n    });\n\n    // Loop on each calendar initialized\n    calendars.forEach(calendar => {\n      // Add listener to date:selected event\n      calendar.on('date:selected', date => {\n        console.log(date);\n      });\n    });\n\n    // To access to bulmaCalendar instance of an element\n    const element: any = document.querySelector('#calendar');\n    if (element) {\n      // bulmaCalendar instance is available as element.bulmaCalendar\n      element.bulmaCalendar.on('select', datepicker => {\n        let ls = datepicker.data.value().split(\" - \");\n        this.date_init = ls[0];\n        this.date_end = ls[1];\n        this.eventsService.getEventsByDate(this.page, this.date_init, this.date_end)\n          .subscribe(data => {\n            this.events = data.content;\n          })\n      });\n    }\n  }\n\n  onScrollDown(ev) {\n    console.log('scrolled down!!', ev);\n\n    this.eventsService.getEventsByDate(this.currentNumberPages, this.date_init, this.date_end)\n      .subscribe(data => {\n        this.events = this.events.concat(data.content);\n        if (data.content.length > 0) {\n          this.currentNumberPages += 1;\n        }\n      })\n  }\n\n\n  onUp(ev) {\n    console.log('scrolled up!', ev);\n    // Delete the rest\n    this.events = this.events.filter((e, i) => i < this.PAGESIZE)\n    // Reset\n    this.currentNumberPages = 1;\n  }\n}\n","\n<div class=\"columns\">\n  <div id=\"calendar-div\" class=\"column center display\">\n    <input id=\"calendar\" type=\"date\">\n  </div>\n\n  <div class=\"column is-8\">\n\n    <div class=\"search-results\" *ngIf=\"events.length>0\"\n      infiniteScroll\n      debounce\n      [infiniteScrollUpDistance]=\"3\"\n      [alwaysCallback]=\"true\"\n      [fromRoot]=\"true\"\n      (scrolled)=\"onScrollDown($event)\"\n      (scrolledUp)=\"onUp($event)\">\n\n      <div *ngFor=\"let event of events\">\n        <div class=\"card\">\n          <div class=\"card-content\">\n            <div class=\"media\">\n              <div class=\"media-content\">\n                <a class=\"title is-4\" routerLink='/events/{{event.id}}'>{{event.title}}</a>\n                <br>\n                <div class=\"is-6\">{{event.subtitle}}</div>\n                <a>@{{event.username}}</a>\n                <br>\n                <time>{{event.date || \"No date\"}}</time>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <br>\n      </div>\n    </div>\n\n    <div class=\"center\" [ngClass]=\"events.length == 0 ? 'display'\n      :'dont-display'\">\n      <div *ngIf=\"events.length == 0\">No events for this date 😩</div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { EventsService } from 'src/app/services/events.service';\nimport { Event } from '../../models/event.model';\nimport { ActivatedRoute } from '@angular/router';\n\n\nenum Direction {\n  ASC = \"ASC\",\n  DESC = \"DESC\"\n};\n\n\nconst ROW_SIZE = 3;\n\n@Component({\n  selector: 'app-events-list',\n  templateUrl: './events-list.component.html',\n  styleUrls: ['./events-list.component.css']\n})\nexport class EventsListComponent implements OnInit {\n\n  eventsList: Event[] = [];\n\n  PAGESIZE: number = 9;\n\n  page: number;\n  sortKey: String;\n  dir: Direction;\n\n  dropdownActive: boolean = false;\n\n  descAscActive: string = 'asc';\n  sortActive: string = 'title';\n\n  totalPages: number;\n  currentNumberPages: number;\n\n  /**\n   * Each time we construct the events list we are going to pass in params a Search key\n   */\n  constructor(private eventsService: EventsService, private route: ActivatedRoute) {\n    this.page = 0;\n    this.currentNumberPages = 1;\n  }\n\n  ngOnInit(): void {\n    this.getEvents();\n  }\n\n  range(end): Array<Number> {\n    var ans = [];\n    for (let i = 0; i <= end; i++) {\n      ans.push(i);\n    }\n    return ans;\n  }\n\n  getEvents(): void {\n    this.eventsList = [];\n    this.currentNumberPages = 1;\n    this.eventsService.getEvents(0, this.descAscActive, this.sortActive)\n      .subscribe(eventsList => {\n        this.eventsList = eventsList.content;\n        this.totalPages = eventsList.totalPages;\n      });\n  }\n\n  getRows(): Array<Number> {\n    return this.range(Math.ceil(this.eventsList.length / ROW_SIZE));\n  }\n\n  getMidPages(): number {\n    return Math.ceil(this.totalPages / 2);\n  }\n\n  onScrollDown(ev) {\n    console.log('scrolled down!!', ev);\n\n    // Activate loading.\n    // document.getElementById(\"loading-contianer\").style.display = 'flex';\n\n    // add another 10 items\n    this.eventsService.getEvents(this.currentNumberPages, this.descAscActive, this.sortActive)\n      .subscribe(data => {\n        this.eventsList = this.eventsList.concat(data.content);\n        if (data.content.length > 0) {\n          this.currentNumberPages += 1;\n        }\n        // delete loading.\n        // document.getElementById(\"loading-contianer\").style.display = 'none';\n      })\n  }\n\n  onUp(ev) {\n    console.log('scrolled up!', ev);\n    // Delete the rest\n    this.eventsList = this.eventsList.filter((e, i) => i < this.PAGESIZE)\n    // Reset\n    this.currentNumberPages = 1;\n  }\n\n  getCurrentNumberPages() {\n    return Array(this.currentNumberPages);\n  }\n\n}\n","\n\n\n<div class=\"container is-fluid\">\n\n  <div class=\"columns is-mobile\">\n    <div class=\"column\">\n      <div class=\"tabs is-toggle\">\n        <ul>\n          <li [ngClass]=\"sortActive== 'date' ? 'is-active':''\">\n            <a (click)=\"sortActive= 'date';getEvents()\">\n              <span class=\"icon is-small\"><i class=\"fas fa-calendar\"\n                  aria-hidden=\"true\"></i></span>\n              <span>Date</span>\n            </a>\n          </li>\n          <li [ngClass]=\"sortActive== 'fees.price' ? 'is-active':''\">\n            <a (click)=\"sortActive= 'fees.price';getEvents()\">\n              <span class=\"icon is-small\"><i class=\"fas fa-dollar-sign\"\n                  aria-hidden=\"true\"></i></span>\n              <span>Price</span>\n            </a>\n          </li>\n          <li [ngClass]=\"sortActive== 'title' ? 'is-active':''\">\n            <a (click)=\"sortActive= 'title';getEvents()\">\n              <span class=\"icon is-small\"><i class=\"fas fa-heading\"\n                  aria-hidden=\"true\"></i></span>\n              <span>Title</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n    <div class=\"column right\">\n      <div class=\"tabs is-toggle\">\n        <ul>\n          <li [ngClass]=\"descAscActive== 'asc' ? 'is-active':''\">\n            <a (click)=\"descAscActive= 'asc';getEvents()\">\n              <span class=\"icon is-small\"><i class=\"fas fa-sort-amount-up-alt\"\n                  aria-hidden=\"true\"></i></span>\n              <span>Asc</span>\n            </a>\n          </li>\n          <li [ngClass]=\"descAscActive== 'desc' ? 'is-active':''\">\n            <a (click)=\"descAscActive= 'desc';getEvents()\">\n              <span class=\"icon is-small\"><i class=\"fas fa-sort-amount-down-alt\"\n                  aria-hidden=\"true\"></i></span>\n              <span>Desc</span>\n            </a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"search-results\" *ngIf=\"eventsList.length>0\"\n    infiniteScroll\n    debounce\n    [infiniteScrollUpDistance]=\"3\"\n    [alwaysCallback]=\"true\"\n    [fromRoot]=\"true\"\n    (scrolled)=\"onScrollDown($event)\"\n    (scrolledUp)=\"onUp($event)\">\n\n    <div *ngFor=\"let j of getCurrentNumberPages(); let i= index\">\n      <div class=\"columns\">\n        <div *ngIf=\"eventsList.length> 0 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[0 + i*PAGESIZE]\"></app-event-card></div>\n        <div *ngIf=\"eventsList.length> 1 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[1 + i*PAGESIZE]\"></app-event-card></div>\n        <div *ngIf=\"eventsList.length> 2 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[2 + i*PAGESIZE]\"></app-event-card></div>\n      </div>\n      <div class=\"columns\">\n        <div *ngIf=\"eventsList.length> 3 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[3 + i*PAGESIZE]\"></app-event-card></div>\n        <div *ngIf=\"eventsList.length> 4 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[4 + i*PAGESIZE]\"></app-event-card></div>\n        <div *ngIf=\"eventsList.length> 5 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[5 + i*PAGESIZE]\"></app-event-card></div>\n      </div>\n      <div class=\"columns\">\n        <div *ngIf=\"eventsList.length> 6 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[6 + i*PAGESIZE]\"></app-event-card>\n        </div>\n        <div *ngIf=\"eventsList.length> 7 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[7 + i*PAGESIZE]\"></app-event-card></div>\n        <div *ngIf=\"eventsList.length> 8 + i*PAGESIZE\" class=\"column\">\n          <app-event-card [event_model]=\"eventsList[8 + i*PAGESIZE]\"></app-event-card></div>\n      </div>\n    </div>\n    <br>\n    <br>\n    <br>\n    <span *ngIf=\"eventsList.length>0\" class=\"center\">No more events </span>\n  </div>\n</div>\n\n<div class=\"center\" [ngClass]=\"eventsList.length == 0 ? 'display'\n  :'dont-display'\">\n  <div *ngIf=\"eventsList.length == 0\">No events 😩</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { Fee } from 'src/app/models/fee.model';\nimport { FeesService } from 'src/app/services/fees.service';\nimport { EventsService } from 'src/app/services/events.service';\nimport { FeeCreate, EventCreate } from 'src/app/services/req/event.create';\nimport Bulma from '@vizuaalog/bulmajs';\nimport { RouterLink, Router, ActivatedRoute } from '@angular/router';\nimport bulmaCalendar from 'bulma-calendar/dist/js/bulma-calendar.min.js';\nimport { getTodayString } from 'src/app/helpers/date';\n\n\n@Component({\n  selector: 'app-create-event',\n  templateUrl: './create-event.component.html',\n  styleUrls: ['./create-event.component.css']\n})\nexport class CreateEventComponent implements OnInit {\n\n  fees: FeeCreate[];\n\n  createEventForm: FormGroup;\n  date: string = \"\";\n  error_date: string = \"\";\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private eventsService: EventsService,\n    private router: Router) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.fees = [];\n    this.createCalendar();\n    console.log(this.error_date.length);\n  }\n\n  createForm() {\n    this.createEventForm = this.formBuilder.group({\n      title: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      subtitle: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      description: ['', Validators.required],\n    })\n  }\n\n  onSubmit() {\n\n    let title: string = this.createEventForm.value.title;\n    let subtitle: string = this.createEventForm.value.subtitle;\n    let description: string = this.createEventForm.value.description;\n\n    var newEvent: EventCreate = new EventCreate(title, subtitle, description, this.fees, this.date);\n\n    this.eventsService.createEvent(newEvent)\n      .subscribe(\n        data => {\n          Bulma.create('notification', {\n            body: 'Event created correctly! 🎉',\n            color: 'success',\n            isDismissable: true,\n            parent: document.getElementById('notification'),\n          }).show();\n\n          this.reset();\n          this.fees = []\n\n          this.router.navigate([`events/${data.id}`]);\n          console.log(data);\n        },\n        error => {\n          console.log(error);\n        })\n  }\n\n  deleteFee(i: number) {\n    this.fees.splice(i, 1);\n  }\n\n  reset(): void {\n    this.fees = [];\n    this.createEventForm.clearAsyncValidators();\n  }\n\n  getFees() {\n    return this.fees;\n  }\n\n  addFee(title: string, price: number, description: string) {\n    this.fees.push(new FeeCreate(price, title, description))\n  }\n\n  createCalendar() {\n    // Initialize all input of date type.\n    const calendars = bulmaCalendar.attach('[type=\"date\"]', {\n      dateFormat: 'YYYY-MM-DD',\n      weekStart: 1,\n      lang: \"en\",\n      startDate: getTodayString(),\n      disabledDates: getTodayString(),\n    });\n\n    // Loop on each calendar initialized\n    calendars.forEach(calendar => {\n      // Add listener to date:selected event\n      calendar.on('date:selected', date => {\n        console.log(date);\n      });\n    });\n\n    // To access to bulmaCalendar instance of an element\n    var element: any = document.getElementById(\"calendar_create\");\n\n    if (element) {\n      // bulmaCalendar instance is available as element.bulmaCalendar\n      element.bulmaCalendar.on('select', datepicker => {\n        this.date = datepicker.data.value();\n        let date: Date = new Date(this.date);\n        let today: Date = new Date(getTodayString());\n        this.error_date = date < today ? \"Not possible date\" : \"\"\n      });\n    }\n  }\n}\n","<form [formGroup]=\"createEventForm\" (submit)=\"onSubmit(); title.value= '';\n  subtitle.value= ''; description.value= ''; fees= []\" novalidate>\n  <section class=\"modal-card-body\">\n    <div class=\"field\">\n\n      <label class=\"label\" for=\"title\">Title:</label>\n\n      <div class=\"control\">\n        <input class=\"input form-control\" formControlName=\"title\" type=\"text\"\n          placeholder=\"Title\" #title>\n      </div>\n\n      <div *ngIf=\"createEventForm.controls['title'].invalid &&\n        (createEventForm.controls['title'].dirty ||\n        createEventForm.controls['title'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"createEventForm.controls['title'].errors.required\" class=\"help\n          is-danger hidden\">\n          Title is required.\n        </p>\n\n        <p *ngIf=\"createEventForm.controls['title'].errors.minlength\"\n          class=\"help is-danger hidden\">\n          Title is not long enough.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"field\">\n\n      <label class=\"label\" for=\"subtitle\">Subtitle:</label>\n\n      <div class=\"control\">\n        <input class=\"input form-control\" formControlName=\"subtitle\" type=\"text\"\n          placeholder=\"Subtitle\" #subtitle>\n      </div>\n\n      <div *ngIf=\"createEventForm.controls['subtitle'].invalid &&\n        (createEventForm.controls['subtitle'].dirty ||\n        createEventForm.controls['subtitle'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"createEventForm.controls['subtitle'].errors.required\"\n          class=\"help\n          is-danger hidden\">\n          Subtitle is required.\n        </p>\n\n        <p *ngIf=\"createEventForm.controls['subtitle'].errors.minlength\"\n          class=\"help\n          is-danger hidden\">\n          Subtitle is not long enough.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"description\">Description</label>\n      <div class=\"control\">\n        <textarea class=\"textarea\"\n          formControlName=\"description\" placeholder=\"Description\" #description></textarea>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"date\">Date</label>\n      <div class=\"control\">\n        <input id=\"calendar_create\" type=\"date\" formControlName=\"date\" #date>\n        <span class=\"help is-danger\">{{error_date}}</span>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">Fees</label>\n\n      <div class=\"list\">\n\n        <div *ngIf=\"getFees().length == 0\" class=\"list-item\" style=\"color: red\">Add\n          Fees\n          please</div>\n\n        <div *ngFor=\"let fee of getFees(); let i= index\" class=\"list-item\">\n          <div class=\"columns\">\n            <div class=\"column is-four-fifths\">\n              <span>{{fee.title}} - {{fee.price}}</span>\n              <p class=\"help\">{{fee.description}}</p>\n            </div>\n            <div class=\"column\">\n              <span class=\"center\">\n                <i (click)=\"deleteFee(i)\" class=\"fas fa-trash hover-red\"></i>\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"fee-form\">\n          <label class=\"label is-small\">Add Fee:</label>\n          <div class=\"field-body\">\n            <div class=\"field\">\n              <p class=\"control is-expanded\">\n                <input class=\"input\" type=\"text\" placeholder=\"Title\" #titlefee>\n              </p>\n            </div>\n            <div class=\"field\">\n              <p class=\"control is-expanded\">\n                <input class=\"input\" type=\"number\"\n                  placeholder=\"Price\" #pricefee>\n              </p>\n            </div>\n          </div>\n\n          <div class=\"field is-horizontal\">\n            <div class=\"field-body\">\n              <div class=\"field\">\n                <div class=\"control\">\n                  <textarea class=\"textarea\" placeholder=\"Description\"\n                    #descriptionfee></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"button is-small is-success\"\n              (click)=\"addFee(titlefee.value, pricefee.value,\n              descriptionfee.value);\n              titlefee.value= '';\n              pricefee.value= '';\n              descriptionfee.value= ''\">Add\n              Fee\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </section>\n  <button type=\"submit\"\n    [disabled]=\"createEventForm.pristine || createEventForm.invalid ||\n    getFees().length== 0 || error_date.length> 0 || date.length == 0\"\n    class=\"button center\n    is-success\">\n    Submit\n  </button>\n\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport { FeeCreate } from 'src/app/services/req/event.create';\nimport { EventsService } from 'src/app/services/events.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport Bulma from '@vizuaalog/bulmajs';\nimport { Event } from '../../../models/event.model';\nimport { Fee } from 'src/app/models/fee.model';\nimport { FeesService } from 'src/app/services/fees.service';\n\n\n@Component({\n  selector: 'app-edit-event',\n  templateUrl: './edit-event.component.html',\n  styleUrls: ['./edit-event.component.css']\n})\nexport class EditEventComponent implements OnInit {\n\n  @Input() event_model: Event;\n\n  editEventForm: FormGroup;\n\n  id: number;\n  toDelete: number[];\n\n  fees: Fee[];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private eventsService: EventsService,\n    private route: ActivatedRoute,\n    private feeService: FeesService,\n    private router: Router) {\n    this.createForm();\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n      this.fees = [];\n      this.toDelete = [];\n      this.getEvent();\n    })\n  }\n\n  getEvent() {\n    this.eventsService.getEvent(this.id)\n      .subscribe((event) => {\n        this.event_model = event;\n        console.log(this.event_model);\n        this.editEventForm.setValue({\n          title: this.event_model.title,\n          subtitle: this.event_model.subtitle,\n          description: this.event_model.description\n        });\n      })\n  }\n\n  createForm() {\n    this.editEventForm = this.formBuilder.group({\n      title: [``, Validators.compose([Validators.required, Validators.minLength(3)])],\n      subtitle: [``, Validators.compose([Validators.required, Validators.minLength(3)])],\n      description: [``, Validators.required],\n    })\n  }\n\n  onSubmit(): void {\n\n    this.event_model.title = this.editEventForm.value.title;\n    this.event_model.subtitle = this.editEventForm.value.subtitle;\n    this.event_model.description = this.editEventForm.value.description;\n\n    this.toDelete.forEach(i => {\n      this.feeService.deleteFee(i)\n        .subscribe(data => this.event_model.fees.splice(i, 1))\n    })\n\n    this.eventsService.updateEvent(this.event_model, this.event_model.id)\n      .subscribe(\n        data => {\n          Bulma.create('notification', {\n            body: 'Event updated correctly! 🎉',\n            color: 'info',\n            isDismissable: true,\n            parent: document.getElementById('notification'),\n          }).show();\n\n          this.router.navigate([`events/${this.id}`]);\n        }\n      )\n  }\n\n  getFees() {\n    return this.event_model === undefined ? [] : this.event_model.fees;\n  }\n\n  addFee(title: string, price: number, description: string) {\n    this.event_model.fees.push(new Fee(price, title, description))\n  }\n\n  deleteFee(i: number) {\n    if (this.event_model.fees != undefined) {\n      this.toDelete.push(this.event_model.fees[i].id);\n    }\n    this.event_model.fees.splice(i, 1);\n  }\n\n}\n","<form [formGroup]=\"editEventForm\" (submit)=\"onSubmit()\" novalidate>\n  <section class=\"modal-card-body\">\n    <div class=\"field\">\n\n      <label class=\"label\" for=\"title\">Title:</label>\n\n      <div class=\"control\">\n        <input class=\"input form-control\" formControlName=\"title\" type=\"text\"\n          placeholder=\"Title\" #title>\n      </div>\n\n      <div *ngIf=\"editEventForm.controls['title'].invalid &&\n        (editEventForm.controls['title'].dirty ||\n        editEventForm.controls['title'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"editEventForm.controls['title'].errors.required\" class=\"help\n          is-danger hidden\">\n          Title is required.\n        </p>\n\n        <p *ngIf=\"editEventForm.controls['title'].errors.minlength\"\n          class=\"help is-danger hidden\">\n          Title is not long enough.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"field\">\n\n      <label class=\"label\" for=\"subtitle\">Subtitle:</label>\n\n      <div class=\"control\">\n        <input class=\"input form-control\" formControlName=\"subtitle\" type=\"text\"\n          placeholder=\"Subtitle\" #subtitle>\n      </div>\n\n      <div *ngIf=\"editEventForm.controls['subtitle'].invalid &&\n        (editEventForm.controls['subtitle'].dirty ||\n        editEventForm.controls['subtitle'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"editEventForm.controls['subtitle'].errors.required\"\n          class=\"help\n          is-danger hidden\">\n          Subtitle is required.\n        </p>\n\n        <p *ngIf=\"editEventForm.controls['subtitle'].errors.minlength\"\n          class=\"help\n          is-danger hidden\">\n          Subtitle is not long enough.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"description\">Description</label>\n      <div class=\"control\">\n        <textarea class=\"textarea\" placeholder=\"Textarea\"\n          formControlName=\"description\" placeholder=\"Description\" #description></textarea>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\">Fees</label>\n\n      <div class=\"list\">\n\n        <div *ngIf=\"getFees().length == 0\" class=\"list-item\" style=\"color: red\">Add\n          Fees\n          please</div>\n\n        <div *ngFor=\"let fee of getFees(); let i= index\" class=\"list-item\">\n\n          <div class=\"columns\">\n            <div class=\"column\">\n              <div class=\"field-body\">\n                <div class=\"field\">\n                  <p class=\"control is-expanded\">\n                    <input class=\"input\" type=\"text\" placeholder=\"Title\"\n                      #titlefee value=\"{{fee.title}}\">\n                  </p>\n                </div>\n                <div class=\"field\">\n                  <p class=\"control is-expanded\">\n                    <input class=\"input\" type=\"number\"\n                      placeholder=\"Price\" #pricefee value=\"{{fee.price}}\"\n                      [disabled]=\"true\">\n                  </p>\n                </div>\n\n              </div>\n              <div class=\"field is-horizontal\">\n                <div class=\"field-body\">\n                  <div class=\"field\">\n                    <div class=\"control\">\n                      <textarea class=\"textarea\" placeholder=\"Description\"\n                        #descriptionfee value=\"{{fee.description}}\"></textarea>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <!-- <div class=\"column\">\n              <span class=\"center\">\n                <i (click)=\"deleteFee(i)\" class=\"fas fa-trash hover-red\"></i>\n              </span>\n            </div> -->\n          </div>\n        </div>\n\n        <div class=\"fee-form\">\n          <label class=\"label is-small\">Add Fee:</label>\n          <div class=\"field-body\">\n            <div class=\"field\">\n              <p class=\"control is-expanded\">\n                <input class=\"input\" type=\"text\" placeholder=\"Title\" #titlefee>\n              </p>\n            </div>\n            <div class=\"field\">\n              <p class=\"control is-expanded\">\n                <input class=\"input\" type=\"number\"\n                  placeholder=\"Price\" #pricefee>\n              </p>\n            </div>\n          </div>\n\n          <div class=\"field is-horizontal\">\n            <div class=\"field-body\">\n              <div class=\"field\">\n                <div class=\"control\">\n                  <textarea class=\"textarea\" placeholder=\"Description\"\n                    #descriptionfee></textarea>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div class=\"right\">\n            <div class=\"button is-small is-success\"\n              (click)=\"addFee(titlefee.value, pricefee.value,\n              descriptionfee.value);\n              titlefee.value= '';\n              pricefee.value= '';\n              descriptionfee.value= ''\">Add\n              Fee\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </section>\n\n  <button type=\"submit\"\n    [disabled]=\"editEventForm.invalid ||\n    getFees().length== 0\"\n    class=\"button center\n    is-info\">\n    Update\n  </button>\n\n</form>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Event, getCheapestPrice, getHighestPrice } from '../../../models/event.model';\nimport { getTodayString } from 'src/app/helpers/date';\n\n@Component({\n  selector: 'app-event-card',\n  templateUrl: './event-card.component.html',\n  styleUrls: ['./event-card.component.css']\n})\nexport class EventCardComponent implements OnInit {\n\n  @Input() event_model: Event = undefined;\n  pastEvent: boolean;\n  constructor() { }\n\n  ngOnInit(): void {\n    this.pastEvent = new Date(this.event_model.date) < new Date(getTodayString());\n  }\n\n  getEventCheapestPrice() {\n    return getCheapestPrice(this.event_model);\n  }\n\n  getEventHighestPrice() {\n    return getHighestPrice(this.event_model);\n  }\n\n}\n","<div class=\"card\" [ngClass]=\"pastEvent ? 'past':''\">\n  <!-- <div class=\"card-image\">\n    <figure class=\"image is-4by3\">\n      <img src=\"https://bulma.io/images/placeholders/1280x960.png\"\n        alt=\"Placeholder image\">\n    </figure>\n  </div> -->\n  <div class=\"card-content\">\n    <div class=\"media\">\n      <!-- <div class=\"media-left\">\n        <figure class=\"image is-48x48\">\n          <img src=\"https://bulma.io/images/placeholders/96x96.png\"\n            alt=\"Placeholder image\">\n        </figure>\n      </div> -->\n      <div class=\"media-content\">\n        <a class=\"title is-4\" routerLink='/events/{{event_model.id}}'>{{event_model.title}}</a>\n        <br>\n        <span>{{event_model.subtitle}}</span>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <a>@{{event_model.username}}</a>\n      <br>\n      <time>{{event_model.date || \"No date\"}}</time>\n      <br>\n      <br>\n      <div class=\"complete\">\n        <button class=\"button is-success is-small\"\n          routerLink='/events/{{event_model.id}}'>\n          {{getEventCheapestPrice()}} € -\n          {{getEventHighestPrice()}} €</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { EventsService } from 'src/app/services/events.service';\nimport { Event, getCheapestPrice } from '../../../models/event.model';\nimport { getTodayString } from 'src/app/helpers/date';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\n\n@Component({\n  selector: 'app-event-details',\n  templateUrl: './event-details.component.html',\n  styleUrls: ['./event-details.component.css']\n})\nexport class EventDetailsComponent implements OnInit {\n\n  @Input() event_model: Event;\n\n  id: number;\n  sub;\n  pastEvent: boolean = true;\n\n  constructor(\n    private route: ActivatedRoute,\n    private eventsService: EventsService,\n    public tokenStorageService: TokenStorageService) {\n\n  }\n\n  ngOnInit() {\n    this.sub = this.route.params.subscribe(params => {\n      this.id = +params['id']; // (+) converts string 'id' to a number\n      this.getEvent();\n    })\n  }\n\n  getEvent() {\n    this.eventsService.getEvent(this.id)\n      .subscribe((event) => {\n        this.event_model = event;\n        this.pastEvent = new Date(this.event_model.date) < new Date(getTodayString());\n        console.log(this.event_model.date, getTodayString())\n      })\n  }\n\n  getEventCheapestPrice() {\n    return getCheapestPrice(this.event_model);\n  }\n\n  ngOnDestroy() {\n    // this.sub.unsubscribe();\n  }\n\n  openBuyTicketsModal() {\n    document.getElementById(\"buy_tickets_modal\").classList.add(\"is-active\");\n  }\n\n  closeBuyTicketsModal() {\n    document.getElementById(\"buy_tickets_modal\").classList.remove(\"is-active\");\n  }\n\n  log(s) {\n    console.log(s);\n  }\n\n\n}\n","<div class=\"columns is-mobile\">\n  <div class=\"column\">\n    <button class=\"button is-success\"\n      [disabled]=\"pastEvent\"\n      (click)=\"openBuyTicketsModal()\">Buy from: {{getEventCheapestPrice()}}</button>\n  </div>\n  <div class=\"column\">\n    <div id=\"edit-button\" *ngIf=\"tokenStorageService.getUsername() ==\n      event_model.username\">\n      <a routerLink=\"/event/edit/{{id}}\" class=\"button is-info is-small\n        is-right\">Edit</a>\n    </div>\n  </div>\n</div>\n<div class=\"card\">\n  <div class=\"card-content\">\n    <div class=\"content\">\n      <p class=\"title is-4\">{{event_model.title}}</p>\n      <p class=\"subtitle is-6\">{{event_model.subtitle}}</p>\n      <strong>Date: </strong>\n      <time datetime=\"2016-1-1\">{{event_model.date}}</time>\n      <hr>\n      {{event_model.description}}\n      <hr>\n      <div class=\"columns\">\n        <div class=\"column\">\n          <div class=\"label\">Fees:</div>\n          <div *ngFor=\"let fee of event_model.fees; let j= index\">\n            <div class=\"control card\">\n              <div id=\"fee-info\">\n                <label class=\"label\">{{fee.title}}</label>\n                <span class=\"help\">Price: {{fee.price}}</span>\n                <span class=\"help\">{{fee.description}}</span>\n              </div>\n            </div>\n            <br>\n          </div>\n        </div>\n        <div class=\"column\">\n          <div class=\"match-parent brand\">MusicMeets</div>\n        </div>\n      </div>\n      <hr>\n      <a>@{{event_model.username}}</a>\n      <br>\n    </div>\n\n    <div class=\"card-footer\">\n      <button class=\"button card-buy-tickets-button is-success\"\n        [disabled]=\"pastEvent\"\n        (click)=\"openBuyTicketsModal()\">Buy Tickets</button>\n    </div>\n  </div>\n</div>\n\n<div id=\"modal-container\" class=\"container\">\n  <div class=\"modal\" id=\"buy_tickets_modal\">\n    <div class=\"modal-background\" (click)=\"closeBuyTicketsModal()\"></div>\n    <div class=\"modal-card\">\n      <app-payment-modal [event]=\"event_model\"></app-payment-modal>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\nimport Bulma from '@vizuaalog/bulmajs';\nimport Swal from 'sweetalert2/dist/sweetalert2.js'\n\n@Component({\n  selector: 'app-lateral-navbar',\n  templateUrl: './lateral-navbar.component.html',\n  styleUrls: ['./lateral-navbar.component.css']\n})\nexport class LateralNavbarComponent implements OnInit {\n\n  active: string;\n\n  constructor(public tokenStorageService: TokenStorageService) { }\n\n  ngOnInit(): void {\n  }\n\n  newActive(active: string) {\n    this.active = active;\n  }\n\n  logout(): void {\n    Swal.fire({\n      title: 'Are you sure you want to log out?',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: 'Yes',\n      cancelButtonText: 'No'\n    }).then((result) => {\n      if (result.value) {\n        this.tokenStorageService.signOut();\n        Swal.fire(\n          'Logged Out',\n          'See you soon 👋🏼',\n          'success'\n        )\n      }\n    })\n  }\n}\n","\n<aside class=\"menu\">\n  <p class=\"menu-label\">\n    General\n  </p>\n  <ul class=\"menu-list\">\n    <li routerLink=\"/\">\n      <a [ngClass]=\"active === 'events' ? 'is-active': ''\"\n        (click)=\"newActive('events')\"> 🚀 Events\n      </a>\n    </li>\n    <li routerLink=\"/calendar\"><a [ngClass]=\"active === 'calendar' ?\n        'is-active': ''\"\n        (click)=\"newActive('calendar')\"> 🗓 Calendar</a></li>\n  </ul>\n  <ul class=\"menu-list\" *ngIf=\"tokenStorageService.isLogged()\">\n    <li routerLink=\"/tickets\">\n      <a [ngClass]=\"active === 'tickets' ? 'is-active': ''\"\n        (click)=\"newActive('tickets')\"> 🎟 Tickets</a>\n    </li>\n  </ul>\n  <p class=\"menu-label\">\n    Administration\n  </p>\n  <ul class=\"menu-list\" *ngIf=\"tokenStorageService.isAdmin()\">\n    <li>\n      <ul>\n        <li routerLink=\"/event/create\">\n          <a [ngClass]=\"active === 'new_event' ? 'is-active': ''\"\n            (click)=\"newActive('new_event')\"> 🎯 New Event</a>\n        </li>\n      </ul>\n    </li>\n  </ul>\n\n\n  <ul class=\"menu-list\">\n    <li *ngIf=\"tokenStorageService.isLogged()\" routerLink=\"/profile\">\n      <a\n        [ngClass]=\"active === 'profile' ? 'is-active': ''\"\n        (click)=\"newActive('profile')\"> 🙎🏻‍♂️\n        Profile</a>\n    </li>\n    <li routerLink=\"/about\">\n      <a [ngClass]=\"active === 'about' ? 'is-active': ''\"\n        (click)=\"newActive('about')\"> 🌐 About</a>\n    </li>\n    <li *ngIf=\"tokenStorageService.isLogged()\" routerLink=\"/\">\n      <a [ngClass]=\"active === 'logout' ? 'is-active': ''\"\n        (click)=\"newActive('logout'); logout()\"> 👋🏼 Logout</a>\n    </li>\n  </ul>\n</aside>\n","import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { AuthenticationService, LoginInfo, Role } from 'src/app/auth/authentication.service';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\nimport Bulma from '@vizuaalog/bulmajs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  isLogged: boolean = false;\n  roles: Role[];\n\n  error_signin: string = \"\";\n  @Output() isSignInEmitter: EventEmitter<boolean> = new EventEmitter();\n\n  loginForm: FormGroup;\n\n  constructor(\n    private authService: AuthenticationService,\n    private tokenStorage: TokenStorageService,\n    private formBuilder: FormBuilder) {\n    this.createForm();\n  }\n\n  noAccount() {\n    this.isSignInEmitter.emit(false);\n  }\n\n  createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    })\n  }\n\n  ngOnInit(): void {\n    // Check if it is already logged\n    if (this.tokenStorage.getToken()) {\n      this.isLogged = true;\n\n      this.roles = this.tokenStorage.getAuthorities();\n    }\n  }\n\n  onSubmit() {\n    this.authService.attemptAuth(\n      new LoginInfo(\n        this.loginForm.value.username,\n        this.loginForm.value.password))\n      .subscribe(\n        data => {\n          // Save data\n          console.log(\"SUCCESS\")\n          console.log(data);\n          this.tokenStorage.saveToken(data.token);\n          this.tokenStorage.saveUsername(data.username);\n          this.tokenStorage.saveAuthorities(data.authorities);\n\n          this.isLogged = true;\n          this.roles = this.tokenStorage.getAuthorities();\n\n          this.isSignInEmitter.emit(true);\n\n          Bulma.create('notification', {\n            body: 'Welcome again to MusicMeets! 🎉',\n            color: 'success',\n            isDismissable: true,\n            parent: document.getElementById('notification'),\n          }).show();\n        },\n        error => {\n          console.log(error);\n          this.error_signin = \"Credentials don't match\";\n        }\n      )\n  }\n\n}\n","<header class=\"modal-card-head\">Welcome Again! 😃</header>\n<form [formGroup]=\"loginForm\" (submit)=\"onSubmit()\" novalidate>\n  <section class=\"modal-card-body\">\n\n    <div class=\"field\">\n      <p class=\"control has-icons-left has-icons-right\">\n\n        <input class=\"input form-control\" formControlName=\"username\"\n          type=\"text\" placeholder=\"Username\">\n\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-user\"></i>\n        </span>\n\n        <!-- <span class=\"icon is-small is-right\">\n        <i class=\"fas fa-check\"></i>\n      </span> -->\n      </p>\n    </div>\n\n    <div class=\"field\">\n      <p class=\"control has-icons-left\">\n        <input class=\"input form-control\" formControlName=\"password\"\n          type=\"password\" placeholder=\"Password\">\n\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n      </p>\n    </div>\n    <hr>\n\n    <!-- <div class=\"is-divider\" data-content=\"OR\"></div> -->\n    <a id=\"i-dont-have-account\" class=\"center\" (click)=\"noAccount()\"><span><i\n          class=\"far\n          fa-frown\"></i> I don't have an\n        account</span></a>\n  </section>\n  <footer class=\"modal-card-foot\">\n    <button type=\"submit\"\n      [disabled]=\"loginForm.pristine || loginForm.invalid\" class=\"button\n      is-success\">\n      Submit\n    </button>\n    <!-- <button class=\"button\" (click)=\"closeModalSignIn()\">Cancel</button> -->\n    <span class=\"help is-danger\">{{error_signin}}</span>\n  </footer>\n</form>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SignupInfo } from 'src/app/auth/authentication.service';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\nimport { EventsService } from 'src/app/services/events.service';\nimport { Event } from 'src/app/models/event.model';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  is_active = false;\n  isSignIn = false;\n\n  events: Event[];\n\n  constructor(public tokenStorageService: TokenStorageService,\n    private eventsService: EventsService) {\n    this.events = []\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  getEventsByTitle(title: string) {\n    this.eventsService.getEventsByTitle(title)\n      .subscribe(eventsList => {\n        this.events = eventsList.content;\n      });\n  }\n\n  collapse() {\n    if (!this.is_active) {\n      document.getElementById(\"navbar-burger\").classList.add(\"is-active\");\n      document.getElementById(\"navbar-menu\").classList.add(\"is-active\");\n      this.is_active = true;\n    } else {\n      document.getElementById(\"navbar-burger\").classList.remove(\"is-active\");\n      document.getElementById(\"navbar-menu\").classList.remove(\"is-active\");\n      this.is_active = false;\n    }\n  }\n\n  openModalSignUp() {\n    document.getElementById(\"sign_up_modal\").classList.add(\"is-active\");\n    document.getElementById(\"sign_up_modal\").classList.add(\"is-clipped\");\n  }\n\n  closeModalSignUp() {\n    document.getElementById(\"sign_up_modal\").classList.remove(\"is-active\");\n    document.getElementById(\"sign_up_modal\").classList.remove(\"is-clipped\");\n  }\n\n  openModalSignIn() {\n    document.getElementById(\"sign_in_modal\").classList.add(\"is-active\");\n    document.getElementById(\"sign_in_modal\").classList.add(\"is-clipped\");\n\n  }\n\n  closeModalSignIn() {\n    document.getElementById(\"sign_in_modal\").classList.remove(\"is-active\");\n    document.getElementById(\"sign_in_modal\").classList.remove(\"is-clipped\");\n  }\n\n  isSignUpEmitter(isSignUp) {\n    if (isSignUp) {\n      this.closeModalSignUp();\n    }\n\n    this.isSignIn = isSignUp;\n  }\n\n  isSignInEmitter(isSignIn) {\n    this.closeModalSignIn();\n    if (!isSignIn) {\n      this.openModalSignUp();\n    }\n    this.isSignIn = isSignIn;\n  }\n\n  getUsername(): string {\n    let username: string = this.tokenStorageService.getUsername();\n    return username;\n  }\n\n}\n","<nav class=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n  <div class=\"navbar-brand\">\n    <div id=\"navbar-brand\" class=\"navbar-item\">MusicMeets</div>\n    <a id=\"navbar-burger\" role=\"button\" class=\"navbar-burger burger\"\n      aria-label=\"menu\"\n      aria-expanded=\"false\" data-target=\"navbarBasicExample\"\n      (click)=\"collapse()\">\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n      <span aria-hidden=\"true\"></span>\n    </a>\n  </div>\n\n  <div id=\"navbar-menu\" class=\"navbar-menu\">\n    <div class=\"navbar-start\">\n      <!-- <a class=\"navbar-item\">\n        Home\n      </a>\n\n      <a class=\"navbar-item\">\n        Documentation\n      </a>\n\n      <div class=\"navbar-item has-dropdown is-hoverable\">\n        <a class=\"navbar-link\">\n          More\n        </a>\n\n        <div class=\"navbar-dropdown\">\n          <a class=\"navbar-item\">\n            About\n          </a>\n          <a class=\"navbar-item\">\n            Jobs\n          </a>\n          <a class=\"navbar-item\">\n            Contact\n          </a>\n          <hr class=\"navbar-divider\">\n          <a class=\"navbar-item\">\n            Report an issue\n          </a>\n        </div>\n      </div> -->\n    </div>\n\n    <div class=\"navbar-end\">\n      <div class=\"dropdown is-active search-bar\">\n\n        <div class=\"control\">\n          <input class=\"input\" type=\"text\" placeholder=\"Find event\"\n            (keydown)=\"getEventsByTitle(searchEventInput.value)\"\n            #searchEventInput>\n        </div>\n\n        <div *ngIf=\"events.length> 0\" class=\"dropdown-menu\" role=\"menu\">\n          <div class=\"dropdown-content\">\n\n            <a *ngFor=\"let event of events\"\n              routerLink=\"/events/{{event.id}}\"\n              class=\"dropdown-item\"\n              (click)=\"events= []; searchEventInput.value= ''\">\n              {{event.title}}\n            </a>\n          </div>\n        </div>\n\n      </div>\n\n      <div *ngIf=\"! tokenStorageService.isLogged()\" class=\"navbar-item\">\n        <div class=\"buttons\">\n          <a class=\"button is-primary\" (click)=\"openModalSignUp()\">\n            <strong>Sign up</strong>\n          </a>\n          <a class=\"button is-light\" (click)=\"openModalSignIn()\">\n            Log in\n          </a>\n        </div>\n      </div>\n\n      <div *ngIf=\"tokenStorageService.isLogged()\" class=\"navbar-item\">\n        {{getUsername()}}\n      </div>\n    </div>\n  </div>\n</nav>\n\n\n<div id=\"sign_up_modal\" class=\"modal\">\n  <div class=\"modal-background\" (click)=\"closeModalSignUp()\"></div>\n  <div class=\"modal-card\">\n    <app-register (isSignUpEmitter)=\"isSignUpEmitter($event)\"></app-register>\n  </div>\n</div>\n\n\n<div id=\"sign_in_modal\" class=\"modal\">\n  <div class=\"modal-background\" (click)=\"closeModalSignIn()\"></div>\n  <div class=\"modal-card\">\n    <app-login (isSignInEmitter)=\"isSignInEmitter($event)\"></app-login>\n  </div>\n</div>\n`\n","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { Event } from \"../../models/event.model\";\nimport Bulma from '@vizuaalog/bulmajs';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { TicketsService, FeeTickets, Assistant } from 'src/app/services/tickets.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\n\n@Component({\n  selector: 'app-payment-modal',\n  templateUrl: './payment-modal.component.html',\n  styleUrls: ['./payment-modal.component.css']\n})\nexport class PaymentModalComponent implements OnInit {\n\n\n  @Input() event: Event;\n  @Output() close: EventEmitter<boolean> = new EventEmitter();\n\n  step_id: number;\n  total: number;\n  total_people: number\n  fee_assistants: Array<FeeTickets> = [];\n  fee_tickets: Array<number>;\n  assistants: Array<Object>;\n  isDocumentationfilled: boolean = false;\n  isCheckoutFilled: boolean = false;\n\n  userInfoForm: FormGroup;\n\n  usernameTickets: HTMLCollectionOf<Element>;\n  userIdTickets: HTMLCollectionOf<Element>;\n\n  points: number;\n  error_points: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private ticketsService: TicketsService,\n    private userService: UserService,\n    public tokenService: TokenStorageService) {\n    this.total_people = 0;\n  }\n\n  ngOnInit(): void {\n    this.step_id = 0;\n    this.total = 0;\n    this.fee_tickets = Array<number>(this.event.fees.length).fill(0);\n    this.userService.getUserData(this.tokenService.getUsername()).subscribe(data => {\n      this.points = data.points;\n    })\n  }\n\n  changeTotalNumber(event: any, fee: any, i: number) {\n    this.fee_tickets[i] = +event.target.value;\n    this.total_people = this.fee_tickets.reduce((p, c) => p + c);\n  }\n\n  updateAssistants() {\n    this.fee_assistants = [];\n    this.event.fees.forEach(fee => this.fee_assistants.push(new FeeTickets(fee.id)));\n    this.usernameTickets = document.getElementsByClassName(\"username-ticket\");\n    this.userIdTickets = document.getElementsByClassName(\"userid-ticket\");\n\n    let count = 0;\n    let iFee = 0;\n    let i = 0;\n    let blank = false;\n\n    while (i < this.total_people && !blank) {\n      var username: any = this.usernameTickets[i];\n      var id: any = this.userIdTickets[i];\n\n\n      // until we find next fee with tickets\n      while (count == this.fee_tickets[iFee]) {\n        iFee += 1;\n        count = 0;\n      }\n\n      this.fee_assistants[iFee].assistants.push(new Assistant(username.value, id.value));\n\n      count += 1;\n      blank = username.value == '' || id.value == '';\n      i = i + 1;\n    }\n\n    this.isDocumentationfilled = !blank;\n  }\n\n  updateCardPayment() {\n    let name: any = document.getElementById(\"checkout-name\");\n\n    if (name.value == this.tokenService.getUsername()) {\n      this.isCheckoutFilled = true;\n    } else {\n      this.isCheckoutFilled = false;\n    }\n\n    this.error_points = this.points < this.getTotalPrice() ? \"Not enough poins\" : \"\";\n  }\n\n  getTotalPrice(): number {\n    let total = 0;\n    this.fee_tickets.forEach((n, i) => {\n      total += n * this.event.fees[i].price;\n    })\n    return total;\n  }\n\n  getTotalPeople(): number {\n    return this.total_people;\n  }\n\n  continue() {\n    this.step_id += 1;\n    if (this.step_id == 3) {\n      this.pay();\n    }\n  }\n\n  back() {\n    this.step_id -= 1;\n  }\n\n  arrayOne(n: number): any[] {\n    return Array(n);\n  }\n\n  pay() {\n    this.ticketsService.buyTickets(this.event.id, this.fee_assistants)\n      .subscribe(data => {\n        console.log(data);\n        Bulma.create('notification', {\n          body: `You purchased tickets for ${this.event.title}! 🎉`,\n          color: 'success',\n          isDismissable: true,\n          parent: document.getElementById('notification'),\n        }).show();\n      }, error => {\n        console.log(error);\n      })\n  }\n\n  getPoints() {\n    return this.points;\n  }\n}\n","<header class=\"modal-card-head\">\n  <nav class=\"breadcrumb is-centered has-succeeds-separator\"\n    aria-label=\"breadcrumbs\">\n    <ul>\n      <li [className]=\"step_id == 0 ? 'is-active': ''\"><a>Tickets</a></li>\n      <li [className]=\"step_id == 1 ? 'is-active': ''\"><a>Documentation</a></li>\n      <li [className]=\"step_id == 2 ? 'is-active': ''\"><a>Checkout</a></li>\n      <li [className]=\"step_id == 3 ? 'is-active': ''\"><a>Confirmation</a></li>\n    </ul>\n  </nav>\n</header>\n<section class=\"modal-card-body\">\n  <div class=\"content\">\n    <div id=\"select-number-tickets\" [style.display]=\"step_id != 0 ? 'none' :\n      ''\">\n      <div *ngFor=\"let fee of event.fees; let j= index\" class=\"control\">\n\n        <div class=\"columns\">\n          <div class=\"column is-10\">\n            <label class=\"label\">{{fee.title}} - {{fee.price}}: </label>\n            <span class=\"help\">{{fee.description}}</span>\n          </div>\n          <div class=\"column\">\n            <div class=\"select\">\n              <select (change)=\"changeTotalNumber($event, fee.id, j)\">\n                <option *ngFor=\"let op of arrayOne(11); let i= index;\"\n                  value=\"{{i}}\">{{i}}</option>\n              </select>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"insert-names-of-tickets\" [style.display]=\"step_id != 1 ? 'none'\n      :''\">\n\n      <div *ngIf=\"this.total_people == 0\">\n        <i class=\"far fa-frown fa-10x center\"></i>\n        <hr>\n        <span class=\"center\">We want people to come. 0 is not a\n          possible number.\n        </span>\n      </div>\n\n      <form>\n        <div *ngFor=\"let fee of event.fees; let i= index\">\n          <div *ngIf=\"fee_tickets[i]> 0\" class=\"columns\">\n            <div class=\"column\">Fee: {{fee.title}}</div>\n            <div class=\"column\"><label class=\"label\">Name</label></div>\n            <div class=\"column\"><label class=\"label\">Id</label></div>\n          </div>\n\n          <div *ngFor=\"let people of arrayOne(fee_tickets[i]); let j= index;\">\n            <div class=\"columns\">\n              <div class=\"column\">\n                <input\n                  class=\"input username-ticket\" type=\"text\"\n                  (change)=\"updateAssistants()\"\n                  placeholder=\"e.g Pablo Ospino\" required>\n              </div>\n              <div class=\"column\">\n                <input\n                  class=\"input userid-ticket\"\n                  type=\"tel\"\n                  (change)=\"updateAssistants()\"\n                  placeholder=\"e.g.\n                  71234567P\" required>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n\n    <div id=\"payment-checkout\" [style.display]=\"step_id != 2 ? 'none' : ''\">\n      <div class=\"field\">\n        <span class=\"help is-info\">Confirm by writting your username: <strong>{{tokenService.getUsername()}}</strong></span>\n        <label class=\"label\">Name</label>\n        <div class=\"control\">\n          <input id=\"checkout-name\" class=\"input\" (change)=\"updateCardPayment()\"\n            type=\"name\" placeholder=\"e.g. Pablo Ospino\">\n        </div>\n      </div>\n      <div>\n        <span>Total: {{getTotalPrice()}}</span>\n        <br>\n        <span>Your points: {{getPoints()}}</span>\n        <span class=\"help is-danger\">{{error_points}}</span>\n      </div>\n    </div>\n\n    <div id=\"confirmation\" class=\"is-success center\" [style.display]=\"step_id !=\n      3 ?\n      'none' : ''\"><i class=\"fas fa-check fa-10x is-success\"></i></div>\n  </div>\n</section>\n<footer class=\"modal-card-foot\">\n  <div class=\"columns\" id=\"footer-modal\">\n    <div class=\"column\">\n      <button class=\"button is-info\"\n        (click)=\"back()\"\n        [disabled]=\"step_id == 0\">Back</button>\n    </div>\n    <div class=\"column\" id=\"continue-button\">\n      <p *ngIf=\"this.total_people>10\" class=\"help is-danger max-10-help\">\n        Max is 10.\n      </p>\n      <button class=\"button is-success\"\n        (click)=\"continue()\"\n        [disabled]=\"step_id == 3 || this.total_people == 0 || this.total_people>\n        10 || (!isDocumentationfilled && step_id == 1) || (step_id==2 &&\n        !isCheckoutFilled) || (step_id == 2 && error_points.length > 0)\">\n        Continue\n      </button>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit, ɵConsole, EventEmitter, Output } from '@angular/core';\nimport { AuthenticationService, SignupInfo, LoginInfo } from 'src/app/auth/authentication.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MustMatch } from 'src/app/helpers/must-match.validator';\nimport Bulma from '@vizuaalog/bulmajs';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n\n  form: any = {};\n  signupInfo: SignupInfo;\n\n  errorMessage: string = '';\n\n  isSignUpFailed: boolean = false;\n  isSignedUp: boolean = false;\n\n  @Output() isSignUpEmitter: EventEmitter<boolean> = new EventEmitter();\n\n  registerForm: FormGroup;\n\n  constructor(\n    private authService: AuthenticationService,\n    private userService: UserService,\n    private formBuilder: FormBuilder,\n    private tokenStorage: TokenStorageService) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.registerForm = this.formBuilder.group({\n      name: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      username: ['', Validators.compose([Validators.required, Validators.minLength(3)])],\n      password: ['', Validators.compose([Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$_!%*?&])[A-Za-z\\d$@$!%*?&].{7,}')])],\n      password2: ['', Validators.required],\n      email: ['', Validators.compose([Validators.required, Validators.email])],\n      checkbox: [false, Validators.requiredTrue],\n    }, {\n      validator: MustMatch('password', 'password2')\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Submit register\n   */\n  onSubmit() {\n    console.log(this.registerForm.value);\n    // data\n    this.signupInfo = new SignupInfo(\n      this.registerForm.value.name,\n      this.registerForm.value.username,\n      this.registerForm.value.password,\n      this.registerForm.value.email\n    );\n\n    // Register\n    this.authService.signUp(this.signupInfo).subscribe(\n      data => {\n        // Success\n        console.log(\"Success\");\n        console.log(data);\n        this.isSignUpEmitter.emit(true);\n        // this.isSignedUp = true;\n        // this.isSignUpFailed = false;\n        this.authService.attemptAuth(\n          new LoginInfo(\n            this.registerForm.value.username,\n            this.registerForm.value.password))\n          .subscribe(\n            data => {\n              // Save data\n              console.log(\"SUCCESS\")\n              console.log(data);\n              this.tokenStorage.saveToken(data.token);\n              this.tokenStorage.saveUsername(data.username);\n              this.tokenStorage.saveAuthorities(data.authorities);\n\n              Bulma.create('notification', {\n                body: 'Welcome to MusicMeets! 🎉',\n                color: 'success',\n                isDismissable: true,\n                parent: document.getElementById('notification'),\n              }).show();\n            }\n          )\n      },\n      error => {\n        // Error\n        console.log(error);\n        this.isSignUpEmitter.emit(false);\n        // this.errorMessage = error.error.message;\n        // this.isSignUpFailed = true;\n      }\n    );\n  }\n}\n","<form [formGroup]=\"registerForm\" (submit)=\"onSubmit()\" novalidate>\n  <section class=\"modal-card-body\">\n    <div class=\"field\">\n\n      <label class=\"label\" for=\"name\">Name:</label>\n\n      <div class=\"control\">\n        <input class=\"input form-control\" formControlName=\"name\" type=\"text\"\n          placeholder=\"Name\">\n      </div>\n\n      <div *ngIf=\"registerForm.controls['name'].invalid &&\n        (registerForm.controls['name'].dirty ||\n        registerForm.controls['name'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['name'].errors.required\" class=\"help\n          is-danger hidden\">\n          Name is required.\n        </p>\n\n        <p *ngIf=\"registerForm.controls['name'].errors.minlength\" class=\"help\n          is-danger hidden\">\n          Name is not long enough.\n        </p>\n      </div>\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"username\">Username</label>\n      <div class=\"control has-icons-left has-icons-right\">\n        <input class=\"input form-control\" formControlName=\"username\"\n          type=\"text\" placeholder=\"Username\">\n\n        <!-- <input ngModel name=\"username\" required\n          (change)=\"checkUsername(username.value)\"\n          class=\"input\"\n          [ngClass]=\"usernameValid ? 'is-success' : 'is-danger'\"\n          type=\"text\"\n          placeholder=\"Username\"\n          #username required autocomplete=\"off\"> -->\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-user\"></i>\n        </span>\n\n        <!-- <span *ngIf=\"usernameValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-check\"></i>\n        </span>\n\n        <span *ngIf=\"!usernameValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n        </span> -->\n      </div>\n\n      <div *ngIf=\"registerForm.controls['username'].invalid &&\n        (registerForm.controls['username'].dirty ||\n        registerForm.controls['username'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['username'].errors.required\" class=\"help\n          is-danger hidden\">\n          Username is required.\n        </p>\n\n\n        <p *ngIf=\"registerForm.controls['username'].errors.minlength\"\n          class=\"help\n          is-danger hidden\">\n          Username is not long enough.\n        </p>\n\n      </div>\n\n      <!-- <p *ngIf=\"usernameValid\" class=\"help is-success hidden\">This username is\n        available</p>\n      <p *ngIf=\"!usernameValid\" class=\"help is-danger hidden\">This username is\n        not\n        available</p> -->\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"email\">Email</label>\n      <div class=\"control has-icons-left has-icons-right\">\n        <input class=\"input form-control\" formControlName=\"email\"\n          type=\"email\" placeholder=\"Email\">\n\n        <!-- <input ngModel name=\"email\" required\n          (change)=\"checkEmail(email.value)\"\n          id=\"email_input\"\n          class=\"input\"\n          [ngClass]=\"emailValid ? 'is-success' : 'is-danger'\"\n          type=\"email\"\n          placeholder=\"Email input\"\n          #email\n          autocomplete=\"off\"> -->\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-envelope\"></i>\n        </span>\n\n        <!-- <span *ngIf=\"emailValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-check\"></i>\n        </span>\n\n        <span *ngIf=\"!emailValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n        </span> -->\n      </div>\n      <div *ngIf=\"registerForm.controls['email'].invalid &&\n        (registerForm.controls['email'].dirty ||\n        registerForm.controls['email'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['email'].errors.required\" class=\"help\n          is-danger hidden\">\n          Email is required.\n        </p>\n\n        <p *ngIf=\"registerForm.controls['email'].errors?.email\" class=\"help\n          is-danger hidden\">\n          Email is invalid.\n        </p>\n\n      </div>\n\n      <!-- <p *ngIf=\"emailValid\" class=\"help is-success\">This email is valid</p>\n      <p *ngIf=\"!emailValid\" class=\"help is-danger\">This email is invalid</p> -->\n    </div>\n\n    <div class=\"field\">\n      <label class=\"label\" for=\"password\">Password</label>\n      <div class=\"control has-icons-left has-icons-right\">\n\n        <input class=\"input form-control\" formControlName=\"password\"\n          type=\"password\" placeholder=\"Password\">\n\n        <!-- <input ngModel name=\"password\" required\n          id=\"password\"\n          class=\"input\"\n          [ngClass]=\"passwordValid ? 'is-success' : 'is-danger'\"\n          type=\"password\"\n          placeholder=\"Password\"\n          #password\n          autocomplete=\"off\"> -->\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n\n        <!-- <span *ngIf=\"passwordValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-check\"></i>\n        </span>\n\n        <span *ngIf=\"passwordValid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n        </span> -->\n      </div>\n      <div *ngIf=\"registerForm.controls['password'].invalid &&\n        (registerForm.controls['password'].dirty ||\n        registerForm.controls['password'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['password'].errors.required\" class=\"help\n          is-danger hidden\">\n          Password is required.\n        </p>\n\n        <p *ngIf=\"registerForm.controls['password'].errors.pattern\"\n          class=\"help\n          is-danger hidden\">\n          Password requires UpperCase, LowerCase, Number/SpecialChar and min 8\n          Chars.\n        </p>\n\n\n      </div>\n      <!-- <p class=\"help is-danger\">This password is invalid</p> -->\n    </div>\n\n    <div class=\"field\">\n      <div class=\"control has-icons-left has-icons-right\">\n\n        <input class=\"input form-control\" formControlName=\"password2\"\n          type=\"password\" placeholder=\"Repeat password\">\n\n        <!-- <input ngModel name=\"password2\" required\n          (change)=\"checkPassword2(password.value, password2.value)\"\n          id=\"password2\"\n          [ngClass]=\"password2Valid ? 'is-success' : 'is-danger'\"\n          class=\"input\"\n          type=\"password\"\n          placeholder=\"Repeat password\"\n          #password2\n          autocomplete=\"off\"> -->\n        <span class=\"icon is-small is-left\">\n          <i class=\"fas fa-lock\"></i>\n        </span>\n\n        <!-- <span *ngIf=\"password2Valid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-check\"></i>\n        </span>\n\n        <span *ngIf=\"!password2Valid\" class=\"icon is-small is-right\">\n          <i class=\"fas fa-exclamation-triangle\"></i>\n        </span> -->\n      </div>\n      <div *ngIf=\"registerForm.controls['password2'].invalid &&\n        (registerForm.controls['password2'].dirty ||\n        registerForm.controls['password2'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['password2'].errors.required\"\n          class=\"help\n          is-danger hidden\">\n          Repeat password is required.\n        </p>\n\n        <div *ngIf=\"registerForm.controls['password2'].errors.mustMatch\"\n          class=\"help\n          is-danger hidden\">\n          Passwords must match</div>\n      </div>\n\n\n      <!-- <p *ngIf=\"password2Valid\" class=\"help is-success\">The passwords are the\n        same</p>\n      <p *ngIf=\"!password2Valid\" class=\"help is-danger\">The passwords are not\n        the same</p> -->\n    </div>\n\n    <div class=\"field\">\n      <div class=\"control\">\n        <label class=\"checkbox\">\n\n          <input formControlName=\"checkbox\" type=\"checkbox\">\n          I agree to the <a href=\"#\">terms and conditions</a>\n        </label>\n      </div>\n\n      <div *ngIf=\"registerForm.controls['checkbox'].invalid &&\n        (registerForm.controls['checkbox'].dirty ||\n        registerForm.controls['checkbox'].touched)\"\n        class=\"alert alert-danger\">\n\n        <p *ngIf=\"registerForm.controls['checkbox'].errors.required\"\n          class=\"help\n          is-danger hidden\">\n          Checkbox is required.\n        </p>\n\n      </div>\n    </div>\n  </section>\n  <footer class=\"modal-card-foot\">\n\n    <button type=\"submit\"\n      [disabled]=\"registerForm.pristine || registerForm.invalid\" class=\"button\n      is-success\">\n      Submit\n    </button>\n\n    <!-- <button class=\"button is-success\" (click)=\"onSubmit(name.value,\n      username.value, email.value, email2.value, password.value,\n      password2.value, checkbox.value)\">Submit</button> -->\n  </footer>\n</form>\n\n\n<!-- <form [formGroup]=\"registerForm\" novalidate>\n  <div class=\"form-group\">\n    <label>Name:</label>\n    <input class=\"form-control\" formControlName=\"name\" type=\"text\">\n  </div>\n\n  <div *ngIf=\"registerForm.controls['name'].invalid &&\n    (registerForm.controls['name'].dirty ||\n    registerForm.controls['name'].touched)\"\n    class=\"alert alert-danger\">\n    <div *ngIf=\"registerForm.controls['name'].errors.required\">\n      Name is required.\n    </div>\n  </div>\n\n  <div class=\"form-group\">\n    <label>Address:</label>\n    <input class=\"form-control\" formControlName=\"address\" type=\"text\">\n  </div>\n\n  <div *ngIf=\"registerForm.controls['address'].invalid &&\n    (registerForm.controls['address'].dirty ||\n    registerForm.controls['address'].touched)\"\n    class=\"alert alert-danger\">\n    <div *ngIf=\"registerForm.controls['address'].errors.required\">\n      email is required.\n    </div>\n  </div>\n\n  <button type=\"submit\"\n    [disabled]=\"registerForm.pristine || registerForm.invalid\" class=\"btn\n    btn-success\">\n    Save\n  </button>\n</form> -->\n","import { Component, OnInit } from '@angular/core';\nimport { TicketsService } from 'src/app/services/tickets.service';\nimport { Ticket } from 'src/app/models/ticket.model';\n\n@Component({\n  selector: 'app-tickets-list',\n  templateUrl: './tickets-list.component.html',\n  styleUrls: ['./tickets-list.component.css']\n})\nexport class TicketsListComponent implements OnInit {\n\n  tickets: Ticket[] = [];\n\n  totalPages: number;\n  currentNumberPages: number;\n  page: number;\n\n  PAGESIZE = 16;\n\n  constructor(private ticketsService: TicketsService) {\n    this.page = 0;\n    this.currentNumberPages = 1;\n  }\n\n  ngOnInit(): void {\n    this.getTickets();\n  }\n\n  getTickets() {\n    this.ticketsService.getTickets()\n      .subscribe(data => {\n        this.tickets = data.content;\n      })\n  }\n\n  onScrollDown(ev) {\n    console.log('scrolled down!!', ev);\n\n    // Activate loading.\n    // document.getElementById(\"loading-contianer\").style.display = 'flex';\n\n    // add another 10 items\n    this.ticketsService.getTickets(this.currentNumberPages)\n      .subscribe(data => {\n        this.tickets = this.tickets.concat(data.content);\n        if (data.content.length > 0) {\n          this.currentNumberPages += 1;\n        }\n        // delete loading.\n        // document.getElementById(\"loading-contianer\").style.display = 'none';\n      })\n  }\n\n  onUp(ev) {\n    console.log('scrolled up!', ev);\n    // Delete the rest\n    this.tickets = this.tickets.filter((e, i) => i < this.PAGESIZE)\n    // Reset\n    this.currentNumberPages = 1;\n  }\n\n\n}\n","\n<div class=\"search-results\" *ngIf=\"tickets.length>0\"\n  infiniteScroll\n  debounce\n  [infiniteScrollUpDistance]=\"3.5\"\n  [alwaysCallback]=\"true\"\n  [fromRoot]=\"true\"\n  (scrolled)=\"onScrollDown($event)\"\n  (scrolledUp)=\"onUp($event)\">\n\n  <table id=\"tickets-table\" class=\"table\">\n    <thead>\n      <tr>\n        <th></th>\n        <th><abbr title=\"Event\">Event</abbr></th>\n        <th>Fee</th>\n        <th><abbr title=\"Price\">Price</abbr></th>\n        <th><abbr title=\"Assistant Name\">Name</abbr></th>\n        <th><abbr title=\"Assistnat Id\">Id</abbr></th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr *ngFor=\"let ticket of tickets; let i= index;\" class=\"table-row\">\n        <th>{{i+1}}</th>\n        <td>{{ticket.fee.eventData.title}}</td>\n        <td>{{ticket.fee.title}}</td>\n        <td>{{ticket.fee.price}}</td>\n        <td>{{ticket.assistantName}}</td>\n        <td>{{ticket.assistantId}}</td>\n        <td>{{ticket.fee.eventData.date}}</td>\n      </tr>\n      <!-- <tr class=\"is-selected\">\n      <th></th>\n      <td><a href=\"https://en.wikipedia.org/wiki/Leicester_City_F.C.\"\n          title=\"Leicester City F.C.\">Leicester City</a> <strong>(C)</strong>\n      </td>\n      <td>38</td>\n      <td>23</td>\n      <td>12</td>\n      <td>3</td>\n      <td>Qualification for the <a\n          href=\"https://en.wikipedia.org/wiki/2016%E2%80%9317_UEFA_Champions_League#Group_stage\"\n          title=\"2016–17 UEFA Champions League\">Champions League group stage</a></td>\n    </tr> -->\n    </tbody>\n  </table>\n</div>\n\n\n<div class=\"center\" [ngClass]=\"tickets.length == 0 ? 'display'\n  :'dont-display'\">\n  <div *ngIf=\"tickets.length == 0\">No tickets 😩</div>\n</div>\n","\n\nexport function getTodayString(): string {\n  let today = new Date();\n  let dd = String(today.getDate()).padStart(2, '0');\n  let mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\n  let yyyy = today.getFullYear();\n\n  return `${yyyy}-${mm}-${dd}`;\n}\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n  return (formGroup: FormGroup) => {\n    const control = formGroup.controls[controlName];\n    const matchingControl = formGroup.controls[matchingControlName];\n\n    if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n      // return if another validator has already found an error on the matchingControl\n      return;\n    }\n\n    // set error on matchingControl if validation fails\n    if (control.value !== matchingControl.value) {\n      matchingControl.setErrors({ mustMatch: true });\n    } else {\n      matchingControl.setErrors(null);\n    }\n  }\n}\n","import { Fee } from './fee.model';\n\n\nexport class Event {\n  id: number;\n  title: string;\n  subtitle: string;\n  description: string;\n  fees: Fee[];\n  userId: number;\n  date: string;\n  lowestPrice: number;\n  username: string;\n\n  constructor(title: string, subtitle: string, description: string, id?: number, userId?: number, fees?: Fee[]) {\n    this.id = id;\n    this.subtitle = subtitle;\n    this.title = title;\n    this.description = description;\n    this.fees = fees;\n    this.userId = userId;\n  }\n\n  setFees(fees: Fee[]) {\n    this.fees = fees;\n  }\n\n  getCheapestPrice(): number {\n    let min = Number.MAX_SAFE_INTEGER;\n    this.fees.forEach(fee => {\n      if (fee.price < min) {\n        min = fee.price;\n      }\n    })\n    return min;\n  }\n\n}\n\n\nexport function getCheapestPrice(event: Event): number {\n  let min = Number.MAX_SAFE_INTEGER;\n  event.fees.forEach(fee => {\n    if (fee.price < min) {\n      min = fee.price;\n    }\n  })\n  return min;\n}\n\nexport function getHighestPrice(event: Event): number {\n  let max = 0;\n  event.fees.forEach(fee => {\n    if (fee.price > max) {\n      max = fee.price;\n    }\n  })\n  return max;\n}\n","export class Fee {\n  id: number;\n  price: number;\n  title: string;\n  description: string;\n  eventId: number;\n  eventData: any;\n\n  constructor(price: number, title: string, description: string) {\n    this.price = price;\n    this.title = title;\n    this.description = description;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n\n  phrases = [\n    \"Without music, life would be a mistake\",\n    \"It's more than just Music. I feel Alive, I feel At Home\",\n    \"Good Music doesn't have an expiration date\",\n    \"A day without Music... Just Kidding I have no idea what that's like.\",\n    \"Meeting you was like listening to a song for the first time\",\n    \"Music can change the world\",\n    \"Music gives a soul to the universe, wings to the mind, flight to the imagination and life to everything.\",\n    \"Music is a language that doesn't speak in particular words. It speaks in emotions, and if it's in the bones, it's in the bones.\"\n  ]\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<hr>\n<h2>\n  <strong>MusicMeets</strong> wants to give people the opportunity to meet new\n  and\n  interesting persons with the power of music. It started with a project\n</h2>\n<hr>\n<div *ngFor=\"let phrase of phrases\">\n  <div class=\"card\">\n    <div class=\"card-content\">\n      <p class=\"title\">\n        \"{{phrase}}\"\n      </p>\n      <p class=\"subtitle\">\n        MusicMeets\n      </p>\n    </div>\n    <!-- <footer class=\"card-footer\">\n      <p class=\"card-footer-item\">\n        <span>\n          Share on <a\n            href=\"https://twitter.com/codinghorror/status/506010907021828096\">Twitter</a>\n        </span>\n      </p>\n      <p class=\"card-footer-item\">\n        <span>\n          Share on <a href=\"#\">Facebook</a>\n        </span>\n      </p>\n    </footer> -->\n  </div>\n\n  <br>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { TokenStorageService } from 'src/app/auth/token-storage.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { User } from 'src/app/services/res/user.interface';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  board: string;\n  errorMessage: string = \"\";\n  use: number;\n  userData: User;\n\n  constructor(\n    private tokenStorageService: TokenStorageService,\n    private userService: UserService) { }\n\n  ngOnInit(): void {\n    this.userService.getUserData(this.tokenStorageService.getUsername()).subscribe(\n      data => {\n        this.userData = data;\n      },\n      error => {\n        this.errorMessage = `${error.status}: ${JSON.parse(error.error).message}`;\n      }\n    );\n  }\n\n}\n","{{errorMessage}}\n\n<div class=\"card\">\n  <div class=\"card-content\">\n    <div class=\"media\">\n      <div class=\"media-content\">\n        <p class=\"title is-4\"><small class=\"help\">Name: </small>{{userData.name}}</p>\n        <p class=\"subtitle is-6\"><small class=\"help\">Username: </small>{{userData.username}}</p>\n      </div>\n    </div>\n\n    <div class=\"content\">\n      <span class=\"help\">Email: </span>{{userData.email}}\n      <br>\n      <br>\n    </div>\n    <div><strong>Points:</strong> {{userData.points}}</div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Event } from '../models/event.model';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { PageableEvent } from './res/events.interface';\nimport { EventCreate } from './req/event.create';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { environment } from 'src/environments/environment';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventsService {\n\n  constructor(private http: HttpClient, private tokenStorageService: TokenStorageService) { }\n\n  private eventsUrl = environment.apiUrl + '/events';\n\n\n  /** GET events from the server */\n  getEvents(page: number = 0, descAscActive: string = \"asc\", sortActive: string = \"title\"): Observable<PageableEvent> {\n\n    let url = `${this.eventsUrl}?page=${page}&dir=${descAscActive}&sort=${sortActive}`\n    console.log(url)\n    return this.http.get<PageableEvent>(url);\n  }\n\n  /** GET event by id. Will 404 if id not found */\n  getEvent(id: number): Observable<Event> {\n    const url = `${this.eventsUrl}/${id}`;\n    return this.http.get<Event>(url, httpOptions).pipe(\n      tap(_ => this.log(`fetched event id=${id}`)),\n      catchError(this.handleError<Event>(`getEvent id=${id}`))\n    );\n  }\n\n  getEventsByTitle(title: string): Observable<PageableEvent> {\n    const url = `${this.eventsUrl}?search=${title}`\n    return this.http.get<PageableEvent>(url, httpOptions).pipe(\n      tap(_ => this.log(`fetched event id=${title}`)),\n      catchError(this.handleError<PageableEvent>(`getEvent id=${title}`))\n    );\n  }\n\n  getEventsByDate(page: number = 0, date_init: string, date_end: string): Observable<PageableEvent> {\n    const url = `${this.eventsUrl}?date_init=${date_init}&date_end=${date_end}&page=${page}`;\n    return this.http.get<PageableEvent>(url, httpOptions).pipe(\n      tap(_ => this.log(`fetched event date=${date_init}&date_end=${date_end}`)),\n      catchError(this.handleError<PageableEvent>(`getEvent date=${date_init}&date_end=${date_end}`))\n    );\n  }\n\n\n  updateEvent(event: Event, id: number): Observable<Event> {\n    const url = `${this.eventsUrl}/${id}`;\n    return this.http.put<Event>(url, event, httpOptions).pipe(\n      tap(_ => this.log(`event updated id=${id}`)),\n      catchError(this.handleError<Event>(`updateEvent id=${id}`))\n    );\n  }\n\n  /** POST Event */\n  createEvent(event: EventCreate): Observable<Event> {\n    return this.http.post<Event>(this.eventsUrl, event, httpOptions).pipe(\n      tap(_ => this.log(`event created`)),\n      catchError(this.handleError<Event>(`Error event create`))\n    );\n  }\n\n  /** DELETE: delete the event from the server */\n  deleteEvent(event: Event | number): Observable<Event> {\n    const id = typeof event === 'number' ? event : event.id;\n    const url = `${this.eventsUrl}/${id}`;\n    return this.http.delete<Event>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted event id=${id}`)),\n      catchError(this.handleError<Event>('deleteEvent'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n      if (error.status == 401) {\n        this.tokenStorageService.signOut();\n      }\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a EventService message with the MessageService */\n  private log(message: string) {\n    console.log('EventService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Fee } from '../models/fee.model';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Observable, of } from 'rxjs';\nimport { httpOptions } from './http/http.options';\nimport { HttpClient } from '@angular/common/http';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeesService {\n\n  private feesUrl = environment.apiUrl + '/fees';\n\n  constructor(private http: HttpClient, private tokenStorageService: TokenStorageService) { }\n\n  /** DELETE: delete the fee from the server */\n  deleteFee(fee: Fee | number): Observable<Fee> {\n    const id = typeof fee === 'number' ? fee : fee.id;\n    const url = `${this.feesUrl}/${id}`;\n    return this.http.delete<Fee>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted fee id=${id}`)),\n      catchError(this.handleError<Fee>('deleteFee'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n      if (error.status == 401) {\n        this.tokenStorageService.signOut();\n      }\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a FeeService message with the MessageService */\n  private log(message: string) {\n    console.log('FeeService: ' + message);\n  }\n}\n","import { HttpHeaders } from '@angular/common/http';\n\nexport const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'Access-Control-Allow-Origin': '*'\n  })\n};\n","\nexport class FeeCreate {\n  price: number;\n  title: string;\n  description: string;\n\n  constructor(price: number, title: string, description: string) {\n    this.price = price;\n    this.title = title;\n    this.description = description;\n  }\n}\n\n\nexport class EventCreate {\n  title: string;\n  subtitle: string;\n  description: string;\n  fees: FeeCreate[];\n  date: string;\n\n  constructor(title: string, subtitle: string, description: string, fees: FeeCreate[], date: string) {\n    this.title = title;\n    this.subtitle = subtitle;\n    this.description = description;\n    this.fees = fees;\n    this.date = date;\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { httpOptions } from './http/http.options';\nimport { HttpClient } from '@angular/common/http';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Ticket } from '../models/ticket.model';\nimport { PageableTicket } from './res/ticket.interface';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { environment } from 'src/environments/environment';\n\n\nexport class FeeTickets {\n  feeId: number;\n  assistants: Assistant[];\n\n  constructor(feeId: number) {\n    this.feeId = feeId;\n    this.assistants = [];\n  }\n}\n\nexport class Assistant {\n  name: string;\n  id: string;\n\n  constructor(name: string, id: string) {\n    this.id = id;\n    this.name = name;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TicketsService {\n\n  private ticketsUrl = environment.apiUrl + '/tickets';\n\n  constructor(private http: HttpClient, private tokenStorageService: TokenStorageService) { }\n\n  getTickets(page: number = 0): Observable<PageableTicket> {\n    let url = `${this.ticketsUrl}?page=${page}`;\n    console.log(url);\n    return this.http.get<PageableTicket>(url);\n  }\n\n  buyTickets(id: number, feeList: FeeTickets[]): Observable<FeeTickets[]> {\n    let url = `${this.ticketsUrl}?event=${id}`;\n    return this.http.post<FeeTickets[]>(url, feeList, httpOptions).pipe(\n      tap(_ => this.log(`event updated id=${id}`)),\n      catchError(this.handleError<FeeTickets[]>(`updateEvent id=${id}`))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      if (error.status == 401) {\n        this.tokenStorageService.signOut();\n      }\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n\n\n  /** Log a EventService message with the MessageService */\n  private log(message: string) {\n    console.log('EventService: ' + message);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { httpOptions } from './http/http.options';\nimport { tap, catchError } from 'rxjs/operators';\nimport { ValidUserInfo } from './res/valid.user';\nimport { User } from './res/user.interface';\nimport { TokenStorageService } from '../auth/token-storage.service';\nimport { environment } from 'src/environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private authUrl = environment.apiUrl + '/auth';\n  private usersUrl = environment.apiUrl + '/users';\n\n  constructor(private http: HttpClient, private tokenStorageService: TokenStorageService) { }\n\n  /** Valid Username: Check if the user is valid */\n  isValidUserName(username: string): Observable<ValidUserInfo> {\n    const url = `${this.authUrl}/valid?username=${username}`;\n    return this.http.get<ValidUserInfo>(url, httpOptions).pipe(\n      tap(_ => this.log(`valid username ${username}`)),\n      catchError(this.handleError<ValidUserInfo>('ValidUsername'))\n    );\n  }\n\n  /** Valid User: Check if the user is valid */\n  isValidUser(username: string, email: string): Observable<ValidUserInfo> {\n    const url = `${this.authUrl}/valid?username=${username}&email=${email}`;\n    return this.http.get<ValidUserInfo>(url, httpOptions).pipe(\n      tap(_ => this.log(`valid username ${username}`)),\n      catchError(this.handleError<ValidUserInfo>('ValidUsername'))\n    );\n  }\n\n  /** Valid email: Check if the user is valid */\n  isValidEmail(email: string): Observable<ValidUserInfo> {\n    const url = `${this.authUrl}/valid?email=${email}`;\n    return this.http.get<ValidUserInfo>(url, httpOptions).pipe(\n      tap(_ => this.log(`valid email ${email}`)),\n      catchError(this.handleError<ValidUserInfo>('Validemail'))\n    );\n  }\n\n  /** Get User Data */\n  getUserData(username: string): Observable<User> {\n    const url = `${this.usersUrl}/username/${username}`;\n    return this.http.get<User>(url, httpOptions).pipe(\n      tap(_ => this.log(`User = ${username}`)),\n      catchError(this.handleError<User>('UserData'))\n    );\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n      if (error.status == 401) {\n        this.tokenStorageService.signOut();\n      }\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** Log a EventService message with the MessageService */\n  private log(message: string) {\n    console.log('EventService: ' + message);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}